setwd("~/GitHub/machinelearning-az/datasets/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
# Plantilla para el Pre Procesado de Datos - Datos faltantes
# Importar el dataset
dataset = read.csv('Data.csv')
# Tratamiento de los valores NA
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
# Plantilla para el Pre Procesado de Datos - Datos faltantes
# Importar el dataset
dataset = read.csv('Data.csv')
dataset[is.na(dataset), 2] <- mean(dataset$Age, na.rm = T)
dataset[is.na(dataset), 3] <- mean(dataset$Salary, na.rm = T)
# Otra forma de tratamiento de los NAs
dataset[is.na(dataset$Age), 2] <- mean(dataset$Age, na.rm = T)
dataset[is.na(dataset$Salary), 3] <- mean(dataset$Salary, na.rm = T)
# Importar el dataset ####
dataset = read.csv('Data.csv')
# Tratamiento de los valores NA ####
dataset[is.na(dataset$Age), 2] <- mean(dataset$Age, na.rm = T)
dataset[is.na(dataset$Salary), 3] <- mean(dataset$Salary, na.rm = T)
# Codificar las variables categÃ³ricas ####
dataset$Country = factor(dataset$Country,
levels = c("France", "Spain", "Germany"),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c("No", "Yes"),
labels = c(0,1))
# Dividir los datos en conjunto de entrenamiento y conjunto de test ####
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
# Escalado de valores ####
training_set[,2:3] = scale(training_set[,2:3])
testing_set[,2:3] = scale(testing_set[,2:3])
View(testing_set)
View(testing_set)
View(training_set)
# Importar el dataset
dataset = read.csv('Salary_Data.csv')
setwd("~/GitHub/machinelearning-az/datasets/Part 2 - Regression/Section 4 - Simple Linear Regression")
# Importar el dataset
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
regressor
summary(regressor)
# Predecir resultados con el conjunto de test
y_pred = predict(regressor, newdata = testing_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = "red") +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = "blue") +
ggtitle("Sueldo vs AÃ±os de Experiencia (Conjunto de Entrenamiento)") +
xlab("AÃ±os de Experiencia") +
ylab("Sueldo (en $)")
ggplot() +
geom_point(aes(x = testing_set$YearsExperience, y = testing_set$Salary),
colour = "red") +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
colour = "blue") +
ggtitle("Sueldo vs AÃ±os de Experiencia (Conjunto de Testing)") +
xlab("AÃ±os de Experiencia") +
ylab("Sueldo (en $)")
